services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "notifications:1:1,email-messages:1:1,slack-messages:1:1,sms-messages:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    environment:
      - BACKEND_PORT=8001
      - KAFKA_BROKER_ADDRESS=kafka:9092
      - NOTIFICATIONS_KAFKA_TOPIC=notifications
    ports:
      - "8001:8001"
    depends_on:
      - kafka
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    environment:
      - FRONTEND_PORT=80
      - BACKEND_HOST=http://backend:8001
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  router:
    build:
      context: ./router
    environment:
      - KAFKA_BROKER_ADDRESS=kafka:9092
      - NOTIFICATIONS_KAFKA_TOPIC=notifications
      - EMAIL_KAFKA_TOPIC=email-messages
      - SMS_KAFKA_TOPIC=sms-messages
      - SLACK_KAFKA_TOPIC=slack-messages
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge